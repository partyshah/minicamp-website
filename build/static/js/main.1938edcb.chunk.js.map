{"version":3,"sources":["logo.svg","assets sync /^/.//.*/.png$","assets/elizabeth.png","assets/lisa.png","assets/parth.png","components/CampTitle.js","components/Home.js","components/About.js","components/MiniCamps.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","CampTitle","props","className","imgpaths","path","height","width","src","require","alt","title","subtitle","tag","camps","photos","Home","camp","About","MiniCamps","App","useState","home","about","minicamps","toggle","setToggle","logo","onClick","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0HAAAA,EAAOC,QAAU,IAA0B,kC,yECA3C,IAAIC,EAAM,CACT,kBAAmB,GACnB,aAAc,GACd,cAAe,IAIhB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,I,gBCxBpBL,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,mLCe5Bc,MAbf,SAAmBC,GACjB,OACE,yBAAKC,UAAU,cACZD,EAAME,SAAShB,KAAI,SAAAiB,GAAI,OACpB,yBAAKC,OAAO,QAAQC,MAAM,QAAQC,IAAKC,MAAQ,KAAeJ,EAAO,QAASK,IAAI,QAEtF,4BAAKR,EAAMS,OACX,4BAAKT,EAAMU,UACX,wBAAIT,UAAU,OAAOD,EAAMW,OCJ3BC,G,YAAQ,CACV,CACIH,MAAO,WACPC,SAAU,aACVC,IAAK,gBACLE,OAAQ,CAAC,UAIb,CACIJ,MAAO,QACPC,SAAU,aACVC,IAAK,gBACLE,OAAQ,CAAC,OAAQ,gBAiBVC,MAVf,WACE,OACE,yBAAKb,UAAU,gBACZW,EAAM1B,KAAI,SAAA6B,GAAI,OACb,kBAAC,EAAD,CAAWN,MAAOM,EAAKN,MAAOC,SAAUK,EAAKL,SAAUC,IAAKI,EAAKJ,IAAKT,SAAUa,EAAKF,cCpB9EG,MARf,WACE,OACE,uCCMWC,MARf,WACE,OACE,uC,MCsDWC,MA5Cf,WAAgB,IAAD,EACeC,mBAAS,CACnCC,MAAM,EACNC,OAAO,EACPC,WAAW,IAJA,mBACNC,EADM,KACEC,EADF,KAOb,OACE,kBAAC,IAAD,KACA,yBAAKvB,UAAU,WACb,6BACE,yBAAKA,UAAU,OAAOK,IAAKmB,MAC3B,4BACE,wBAAIxB,UAAWsB,EAAOH,KAAO,SAAW,IACtC,kBAAC,IAAD,CAAMM,QAAS,kBAAMF,EAAU,CAACJ,MAAM,EAAMC,OAAO,EAAOC,WAAW,KAASK,GAAG,KAAjF,SAEF,wBAAI1B,UAAWsB,EAAOF,MAAQ,SAAW,IACvC,kBAAC,IAAD,CAAMK,QAAS,kBAAMF,EAAU,CAACJ,MAAM,EAAOC,OAAO,EAAMC,WAAW,KAASK,GAAG,UAAjF,UAEF,wBAAI1B,UAAWsB,EAAOD,UAAY,SAAW,IAC3C,kBAAC,IAAD,CAAMI,QAAS,kBAAMF,EAAU,CAACJ,MAAM,EAAOC,OAAO,EAAOC,WAAW,KAAQK,GAAG,cAAjF,gBAGJ,kHAKF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOxB,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,WCtCUyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1938edcb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.211e7149.svg\";","var map = {\n\t\"./elizabeth.png\": 25,\n\t\"./lisa.png\": 26,\n\t\"./parth.png\": 27\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 24;","module.exports = __webpack_public_path__ + \"static/media/elizabeth.fdce6cf4.png\";","module.exports = __webpack_public_path__ + \"static/media/lisa.ab811c33.png\";","module.exports = __webpack_public_path__ + \"static/media/parth.96d6da80.png\";","import React from 'react';\n\nfunction CampTitle(props) {\n  return (\n    <div className=\"camp-title\">\n      {props.imgpaths.map(path => (\n          <img height=\"120px\" width=\"120px\" src={require('../assets/' + path + \".png\")} alt=''/>\n      ))}\n      <h1>{props.title}</h1>\n      <h2>{props.subtitle}</h2>\n      <h3 className=\"tag\">{props.tag}</h3>\n    </div>\n  );\n}\n\nexport default CampTitle;\n","import React from 'react';\nimport CampTitle from \"./CampTitle\"\n\nimport \"./Home.scss\";\nimport \"./CampTitle.scss\";\n\nconst camps = [\n    {\n        title: \"teaching\",\n        subtitle: \"is a party\",\n        tag: \"for beginners\",\n        photos: [\"parth\"]\n\n    },\n\n    {\n        title: \"figma\",\n        subtitle: \"is a party\",\n        tag: \"for beginners\",\n        photos: [\"lisa\", \"elizabeth\"]\n\n    }\n\n];\n\n\nfunction Home() {\n  return (\n    <div className=\"page-content\">\n      {camps.map(camp => (\n        <CampTitle title={camp.title} subtitle={camp.subtitle} tag={camp.tag} imgpaths={camp.photos}/>\n      ))}\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction About() {\n  return (\n    <div>\n      ABOUT\n    </div>\n  );\n}\n\nexport default About;","import React from 'react';\n\nfunction MiniCamps() {\n  return (\n    <div>\n      HELLO\n    </div>\n  );\n}\n\nexport default MiniCamps;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport MiniCamps from \"./components/MiniCamps\";\n\nimport './App.scss';\n\nfunction App() {\n  const [toggle, setToggle] = useState({\n    home: true,\n    about: false,\n    minicamps: false\n  });\n\n  return (\n    <Router>\n    <div className=\"content\">\n      <nav>\n        <img className=\"logo\" src={logo} />\n        <ul>\n          <li className={toggle.home ? 'active' : ''}>\n            <Link onClick={() => setToggle({home: true, about: false, minicamps: false})} to=\"/\">home</Link>\n          </li>\n          <li className={toggle.about ? 'active' : ''}>\n            <Link onClick={() => setToggle({home: false, about: true, minicamps: false})} to=\"/about\">about</Link>\n          </li>\n          <li className={toggle.minicamps ? 'active' : ''}>\n            <Link onClick={() => setToggle({home: false, about: false, minicamps: true})} to=\"/minicamps\">mini camps</Link>\n          </li>\n        </ul>\n        <p>mini camp's mission is to spark your love for learning through playful communities</p>\n      </nav>\n\n      {/* A <Switch> looks through its children <Route>s and\n          renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/minicamps\">\n          <MiniCamps />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}